"""init

Revision ID: ce4d4c5b1fff
Revises: 
Create Date: 2025-02-10 21:52:23.225803

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ce4d4c5b1fff'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('events',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('start_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('tickets', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_start_at'), 'events', ['start_at'], unique=False)
    op.create_table('places',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('avg_bill', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('gis_id', sa.String(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_places_gis_id'), 'places', ['gis_id'], unique=True)
    op.create_index(op.f('ix_places_lat'), 'places', ['lat'], unique=False)
    op.create_index(op.f('ix_places_lon'), 'places', ['lon'], unique=False)
    op.create_table('category_place_table',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('category_id', 'place_id')
    )
    op.create_table('places_rating',
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_places_rating_place_id'), 'places_rating', ['place_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_places_rating_place_id'), table_name='places_rating')
    op.drop_table('places_rating')
    op.drop_table('category_place_table')
    op.drop_index(op.f('ix_places_lon'), table_name='places')
    op.drop_index(op.f('ix_places_lat'), table_name='places')
    op.drop_index(op.f('ix_places_gis_id'), table_name='places')
    op.drop_table('places')
    op.drop_index(op.f('ix_events_start_at'), table_name='events')
    op.drop_table('events')
    op.drop_table('categories')
    # ### end Alembic commands ###
